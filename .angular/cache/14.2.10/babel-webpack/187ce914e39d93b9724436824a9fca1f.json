{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport * as moment from 'moment';\nimport { LigneCommande } from '../model/ligne-commande.model';\nimport { Commande } from '../model/commande.model';\nimport { Order } from '../model/order.model';\nimport { Client } from '../model/client.model';\nlet AjoutCommandeComponent = class AjoutCommandeComponent {\n  constructor(ClientService, commandeService, produitService, router) {\n    this.ClientService = ClientService;\n    this.commandeService = commandeService;\n    this.produitService = produitService;\n    this.router = router;\n  }\n\n  ngOnInit() {\n    this.modeUpdate = false;\n    this.order = new Order();\n    this.order.client = new Client();\n    this.order.commande = new Commande();\n    this.lignesTemp = new LigneCommande();\n    this.order.commande.date = moment();\n    this.order.ligneCommande = [];\n    this.order.commande.clientId = 1;\n    this.order.commande.prixTotal = 0;\n    this.order.commande.etat = 1;\n    this.getClientFromOrderService();\n    this.loadAllProduits();\n  }\n\n  loadAllProduits() {\n    this.produitService.findAll().subscribe(data => {\n      this.produits = data;\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  ajouterLigneCommande() {\n    this.lignesTemp.prixTotal = this.lignesTemp.produit.prixUnitaire * this.lignesTemp.qte;\n    this.order.commande.prixTotal = this.order.commande.prixTotal + this.lignesTemp.prixTotal;\n    let currentProduit = this.lignesTemp.produit;\n    this.order.ligneCommande.push(this.lignesTemp);\n    this.lignesTemp = new LigneCommande();\n    this.lignesTemp.produit = currentProduit;\n  }\n\n  supprimerLigneCommande(index) {\n    this.order.commande.prixTotal = this.order.commande.prixTotal - this.order.ligneCommande[index].prixTotal;\n    this.order.ligneCommande.splice(index, index + 1);\n  }\n\n  editerLigneCommande(index) {\n    this.modeUpdate = true;\n    this.indexUpdate = index;\n    this.lignesTemp.qte = this.order.ligneCommande[index].qte;\n    this.lignesTemp.prixUnitaire = this.order.ligneCommande[index].prixUnitaire;\n    this.lignesTemp.produit = this.order.ligneCommande[index].produit;\n  }\n\n  updateLigneCommande() {\n    this.order.commande.prixTotal = this.order.commande.prixTotal - this.order.ligneCommande[this.indexUpdate].prixTotal;\n    this.lignesTemp.prixTotal = this.lignesTemp.qte * this.lignesTemp.produit.prixUnitaire;\n    this.order.commande.prixTotal = this.order.commande.prixTotal + this.lignesTemp.prixTotal;\n    this.order.ligneCommande[this.indexUpdate] = this.lignesTemp;\n    this.lignesTemp = new LigneCommande();\n    this.modeUpdate = false;\n  }\n\n  getClientFromOrderService() {\n    // just for getting an exited client from DB by invocating it from Order Micoservice\n    this.ClientService.findFist().subscribe(data => {\n      this.order.client = data.body;\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  affecterProduit(event) {\n    this.lignesTemp.produit = event;\n  }\n\n  passerLaCommande() {\n    this.commandeService.create(this.order).subscribe(data => {\n      this.order = data.body;\n      this.router.navigateByUrl('/mes-achats');\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  annuler() {\n    this.router.navigateByUrl('/mes-achats');\n  }\n\n};\nAjoutCommandeComponent = __decorate([Component({\n  selector: 'app-ajout-commande',\n  templateUrl: './ajout-commande.component.html',\n  styleUrls: ['./ajout-commande.component.css']\n})], AjoutCommandeComponent);\nexport { AjoutCommandeComponent };","map":null,"metadata":{},"sourceType":"module"}